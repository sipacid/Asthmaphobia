#include "objectivemanager.h"

using namespace Asthmaphobia::Features::Exploits;

ObjectiveManager::ObjectiveManager() : Feature("Objectives", "Gives you the ability to complete objectives.", FeatureCategory::Exploits)
{
}

void ObjectiveManager::OnMenu()
{
	if (ImGui::Button("Complete Objectives##objectiveManager"))
	{
		if (GameState::ghostAI == nullptr || GameState::objectiveManager == nullptr || GameState::objectiveManager->Fields.ListOfObjectives == nullptr)
			Notifications::AddNotification(MESSAGE_MUST_BE_INGAME, Notifications::NotificationType::Error, 3.0);
		else
			this->EnabledSetting->SetValue(true);
	}
	DrawHotkeyUI();
}

void ObjectiveManager::OnGhostAIUpdate(SDK::GhostAI* ghostAI, SDK::MethodInfo* methodInfo) const
{
	if (GameState::ghostAI == nullptr || GameState::objectiveManager == nullptr || GameState::objectiveManager->Fields.ListOfObjectives == nullptr || this->IsEnabled() != true)
		return;

	for (int i = 0; i < GameState::objectiveManager->Fields.ListOfObjectives->Fields.Size; i++)
	{
		const auto objective = GameState::objectiveManager->Fields.ListOfObjectives->Fields.Items->Vector[i];
		if (objective == nullptr)
			continue;

		const auto objectiveValue = objective->Fields.ObjectiveValues;
		if (objectiveValue == nullptr)
			continue;

		if (objective->Fields.ObjectiveStatus == SDK::ObjectiveStatus::Completed)
			continue;

		SDK::ObjectiveManager_CompleteObjectiveSynced_ptr(GameState::objectiveManager, objectiveValue->Fields.Type, nullptr);
	}

	this->EnabledSetting->SetValue(false);
}
