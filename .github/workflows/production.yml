name: Production CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-website:
    runs-on: ubuntu-latest
    name: Build Website
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Restore cache
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./website/node_modules
            ./website/.bun/install/cache
          key: ${{ runner.os }}-${{ hashFiles('bun.lockb') }}

      - name: Install dependencies
        if: steps.cache-dependencies.cache-hit != 'true'
        run: cd website && bun install --frozen-lockfile

      - name: Build website
        run: cd website && bun run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: website/dist

  build-cheat:
    runs-on: windows-latest
    name: Build Cheat DLL
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup Visual Studio Components
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: "[17.0,18.0)"
          vs-prerelease: false
          msbuild-architecture: x64

      - name: Build Cheat DLL
        run: msbuild /m /p:Configuration=Release ./cheat

      - name: Upload Cheat DLL Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cheat-dll
          path: cheat/x64/Release/cheat.dll

  deploy:
    needs: [build-website, build-cheat]
    environment:
      name: production
      url: "https://asthmaphobia.xyz"
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Deploy to Production
    steps:
      - name: Download Website Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Download Cheat DLL Artifact
        uses: actions/download-artifact@v4
        with:
          name: cheat-dll
          path: cheat-dll

      - name: Move Cheat DLL to Public Directory
        run: |
          cp cheat-dll/cheat.dll dist/

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
